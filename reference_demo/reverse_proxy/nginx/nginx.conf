# https://nginx.org/en/docs/http/load_balancing.html
# placeholder: event handlers
events {}

# handle HTTP requests
http {
  # define a group of backend servers that will handle requests
  upstream flask_servers {
    # Default load balancing method is round-robin.
    # To test other methods, uncomment one of the following:
    # least_conn;   # forward to the server with the least number of active connections
    # ip_hash;      # same ip-hash to the same server (session maintaining)
    server flask_server1:5000;
    server flask_server2:5000;
    server flask_server3:5000;
  }

  # virtual server config
  server {
    listen 80;

    # process requests matching the URI pattern (`/` means root + everything under it)
    location / {
      # forward requests to the upstream group
      proxy_pass http://flask_servers;
      # note back info of the original client
      # $host: https://nginx.org/en/docs/http/ngx_http_core_module.html#var_host
      # $remote_addr: https://nginx.org/en/docs/http/ngx_http_core_module.html#var_remote_addr
      # $proxy_add_x_forwarded_for: https://nginx.org/en/docs/http/ngx_http_proxy_module.html#var_proxy_add_x_forwarded_for
      # $scheme: https://nginx.org/en/docs/http/ngx_http_core_module.html#var_scheme
      # X-Forwarded-For records a list of hopped IPs, compared to X-Real-IP.
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}